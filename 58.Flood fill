class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int initial=image[sr][sc];
        queue<pair<int,pair<int,int>>> q;
        int row=image.size();
        int col=image[0].size();
        q.push({image[sr][sc],{sr,sc}});
        while(!q.empty()){
            pair<int,pair<int,int>> top=q.front();
            q.pop();
            int value=top.first;
            int sr=top.second.first;
            int sc=top.second.second;
            image[sr][sc]=color;
            if(sr-1>=0 && image[sr-1][sc]==initial && image[sr-1][sc]!=color){
                q.push({image[sr-1][sc],{sr-1,sc}});
            }
            if(sr+1<row && image[sr+1][sc]==initial && image[sr+1][sc]!=color){
                q.push({image[sr+1][sc],{sr+1,sc}});
            }
            if(sc-1>=0 && image[sr][sc-1]==initial && image[sr][sc-1]!=color){
                q.push({image[sr][sc-1],{sr,sc-1}});
            }
            if(sc+1<col && image[sr][sc+1]==initial && image[sr][sc+1]!=color){
                q.push({image[sr][sc+1],{sr,sc+1}});
            }
        }
        return image;
    }

};
