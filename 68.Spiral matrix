class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int m=matrix.size();
        int n=matrix[0].size();
        int row_start=0;
        int col_start=0;
        int row_end=m-1;
        int col_end=n-1;
        vector<int> ans;
        while(row_start<=row_end && col_start<=col_end){
            for(int col=col_start;col<=col_end;col++){
               ans.push_back(matrix[row_start][col]);
            }
            row_start++;
            for(int row=row_start;row<=row_end;row++){
                ans.push_back(matrix[row][col_end]);
            }
            col_end--;
            if(row_start<=row_end){
              for(int col=col_end;col>=col_start;col--){
                ans.push_back(matrix[row_end][col]);
            }
            row_end--;
            }
            if(col_start<=col_end){
              for(int row=row_end;row>=row_start;row--){
                ans.push_back(matrix[row][col_start]);
            }
            col_start++;
            }
            
        }
        return ans;
    }
};
