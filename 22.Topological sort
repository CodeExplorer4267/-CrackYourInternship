{
	public:
	//Function to return list containing vertices in Topological order. 
	void toposort(unordered_map<int,bool> &visited,stack<int> &s,int node,
	vector<int> adj[]){
	    visited[node]=true;
	    for(auto neigh:adj[node]){
	        if(!visited[neigh]){
	            toposort(visited,s,neigh,adj);
	        }
	        
	    }
	    s.push(node);
	}
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	   unordered_map<int,bool> visited;
	   stack<int> s;
	   for(int i=0;i<V;i++){
	       if(!visited[i]){
	           toposort(visited,s,i,adj);
	       }
	   }
	   vector<int> ans;
	   while(!s.empty()){
	       ans.push_back(s.top());
	       s.pop();
	       
	   }
	   return ans;
	}
};
