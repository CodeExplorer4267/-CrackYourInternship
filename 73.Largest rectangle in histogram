class Solution {
public:
    vector<int> nextSmaller(vector<int>& h,int n){
        vector<int> ans(n);
        stack<int> st;
        st.push(-1);
        for(int i=n-1;i>=0;i--){
            int curr=h[i];
            while(st.top()!=-1 && h[st.top()]>=curr){
                st.pop();
            }
            ans[i]=st.top();
            st.push(i);
        }
        return ans;
    }
    vector<int> prevSmaller(vector<int>& h,int n){
        vector<int> ans(n);
        stack<int> st;
        st.push(-1);
        for(int i=0;i<n;i++){
            int curr=h[i];
            while(st.top()!=-1 && h[st.top()]>=curr){
                st.pop();
            }
            ans[i]=st.top();
            st.push(i);
        }
        return ans;
    }
    int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();
        vector<int> next(n);
        next=nextSmaller(heights,n);
        vector<int> prev(n);
        prev=prevSmaller(heights,n);
        int maxArea=INT_MIN;
        for(int i=0;i<n;i++){
            int height=heights[i];
            if(next[i]==-1){
                next[i]=n;
            }
            int length=next[i]-prev[i]-1;
            int area=height*length;
            maxArea=max(area,maxArea);
        }
        return maxArea;
    }
};
