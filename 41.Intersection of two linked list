class Solution {
public:
    ListNode* detectloop(ListNode* head){
        ListNode* slow=head;
        ListNode* fast=head;
        while(slow!=NULL && fast!=NULL){
            fast=fast->next;
            if(fast!=NULL){
                fast=fast->next;
            }
            slow=slow->next;
            if(slow==fast){
                return slow;
            }
        }
        return NULL;
    }
    ListNode* getstarting(ListNode* head){
        ListNode* intersect=detectloop(head);
        if(intersect==NULL){
            return NULL;
        }
        ListNode* slow=head;
        while(slow!=intersect){
            slow=slow->next;
            intersect=intersect->next;
        }
        return slow;
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(headA==NULL||headB==NULL){
            return NULL;
        }
        ListNode* ptr=headA;
        while(ptr->next!=NULL){
            ptr=ptr->next;
        }
        ptr->next=headA;
        ListNode* intersection=getstarting(headB);
        ptr->next=NULL;
        if(intersection==NULL){
            return NULL;
        }
        
        return intersection;
    }
};
