class Solution {
public:
    bool isPossible(int mid,int n,vector<int> &a,int k){
        int count=1;
        int sum=0;
        for(int i=0;i<n;i++){
            if(sum+a[i]<=mid){
                sum+=a[i];
            }
            else{
                count++;
                if(count>k || a[i]>mid){
                    return false;
                }
                sum=a[i];
            }
        }
        return true;
    }
    int splitArray(vector<int>& nums, int k) {
        int sum=0;
        int low=INT_MIN;
        int n=nums.size();
        int ans=-1;
        for(int i=0;i<n;i++){
            sum+=nums[i];
            if(low<nums[i]){
                low=nums[i];
            }
        }
        int high=sum;
        while(low<=high){
            int mid=(low+high)/2;
            if(isPossible(mid,n,nums,k)){
                ans=mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
            mid=(high+low)/2;
        }
        return ans;
    }
};
