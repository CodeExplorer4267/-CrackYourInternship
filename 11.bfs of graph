class Solution {
  public:
    // Function to return Breadth First Traversal of given graph
    
    void bfs(vector<int> adj[],vector<int> &ans,int node,unordered_map<int,bool> visited){
        queue<int> q;
        q.push(node);
        visited[node]=true;
        while(!q.empty()){
            int front=q.front();
            q.pop();
            ans.push_back(front);
            for(auto neigh:adj[front]){
                if(!visited[neigh]){
                    q.push(neigh);
                    visited[neigh]=true;
                }
            }
        }
    }
    vector<int> bfsOfGraph(int V, vector<int> adj[]) {
       vector<int> ans;
       unordered_map<int,bool> visited;
       bfs(adj,ans,0,visited);
       return ans;
    }
};
