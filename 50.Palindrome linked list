class Solution {
public:
    ListNode* getmid(ListNode* head){
        ListNode* slow=head;
        ListNode* fast=head->next;
        while(fast!=NULL && fast->next!=NULL){
           slow=slow->next;
           fast=fast->next->next;

        }
        return slow;
    }
    ListNode* reverse(ListNode* head){
        ListNode* curr=head;
        ListNode* prev=NULL;
        ListNode* next=NULL;
        while(curr!=NULL){
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
    bool isPalindrome(ListNode* head) {
        if(head==NULL || head->next==NULL){
            return true;
        }
        ListNode* middle=getmid(head);
        ListNode* temp=middle->next;
        middle->next=reverse(temp);
        ListNode* head2=middle->next;
        while(head2!=NULL){
            if(head->val!=head2->val){
               return false;
            }
            head=head->next;
            head2=head2->next;
        }
        return true;
    }
};
