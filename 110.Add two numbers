class Solution {
public:
    void addatend(ListNode* &head,ListNode* &tail,int d){
        ListNode* newnode=new ListNode(d);
        if(head==NULL && tail==NULL){
            head=newnode;
            tail=newnode;
        }
        else{
            tail->next=newnode;
            tail=newnode;
        }
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
       if(l1==NULL){
        return l2;
       }
       if(l2==NULL){
        return l1;
       }
       int carry=0;
       int sum=0;
       ListNode* newhead=NULL;
       ListNode* newtail=NULL;
       int digit;
       while(l1!=NULL && l2!=NULL){
          sum=carry+l1->val+l2->val;
          digit=sum%10;
          addatend(newhead,newtail,digit);
          carry=sum/10;
          l1=l1->next;
          l2=l2->next;
       }
       while(l1!=NULL){
          sum=carry+l1->val;
          digit=sum%10;
          addatend(newhead,newtail,digit);
          carry=sum/10;
          l1=l1->next;
       }
       while(l2!=NULL){
          sum=carry+l2->val;
          digit=sum%10;
          addatend(newhead,newtail,digit);
          carry=sum/10;
          l2=l2->next;
       }
       while(carry!=0){
        sum=carry;
        digit=carry%10;
        addatend(newhead,newtail,digit);
        carry=sum/10;
       }
       return newhead;
    }

};
