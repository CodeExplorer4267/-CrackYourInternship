class Solution {
public:
    struct cmp{
       bool operator()(pair<int,int> &a,pair<int,int> &b){
           return a.second<b.second;
       }
    };
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> map;
        priority_queue<pair<int,int>,vector<pair<int,int>>,cmp> minh;
        for(int i=0;i<nums.size();i++){
            map[nums[i]]++;
        }
        for(auto i:map){
            pair<int,int> p=make_pair(i.first,i.second);
            minh.push(p);
        }
        vector<int> ans;
        while(k>0){
            pair<int,int> top=minh.top();
            minh.pop();
            ans.push_back(top.first);
            k--;
        }
        return ans;
    }
};
